//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpinComponent spin { get { return (SpinComponent)GetComponent(GameComponentsLookup.Spin); } }
    public bool hasSpin { get { return HasComponent(GameComponentsLookup.Spin); } }

    public void AddSpin(float newTorque, float newDampening) {
        var index = GameComponentsLookup.Spin;
        var component = CreateComponent<SpinComponent>(index);
        component.Torque = newTorque;
        component.Dampening = newDampening;
        AddComponent(index, component);
    }

    public void ReplaceSpin(float newTorque, float newDampening) {
        var index = GameComponentsLookup.Spin;
        var component = CreateComponent<SpinComponent>(index);
        component.Torque = newTorque;
        component.Dampening = newDampening;
        ReplaceComponent(index, component);
    }

    public void RemoveSpin() {
        RemoveComponent(GameComponentsLookup.Spin);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpin;

    public static Entitas.IMatcher<GameEntity> Spin {
        get {
            if (_matcherSpin == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Spin);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpin = matcher;
            }

            return _matcherSpin;
        }
    }
}
