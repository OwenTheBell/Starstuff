//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BackgroundLayer backgroundLayer { get { return (BackgroundLayer)GetComponent(GameComponentsLookup.BackgroundLayer); } }
    public bool hasBackgroundLayer { get { return HasComponent(GameComponentsLookup.BackgroundLayer); } }

    public void AddBackgroundLayer(BackgroundTileSetup newTileSetup, System.Collections.Generic.List<GameEntity> new_Tiles) {
        var index = GameComponentsLookup.BackgroundLayer;
        var component = CreateComponent<BackgroundLayer>(index);
        component.TileSetup = newTileSetup;
        component._Tiles = new_Tiles;
        AddComponent(index, component);
    }

    public void ReplaceBackgroundLayer(BackgroundTileSetup newTileSetup, System.Collections.Generic.List<GameEntity> new_Tiles) {
        var index = GameComponentsLookup.BackgroundLayer;
        var component = CreateComponent<BackgroundLayer>(index);
        component.TileSetup = newTileSetup;
        component._Tiles = new_Tiles;
        ReplaceComponent(index, component);
    }

    public void RemoveBackgroundLayer() {
        RemoveComponent(GameComponentsLookup.BackgroundLayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBackgroundLayer;

    public static Entitas.IMatcher<GameEntity> BackgroundLayer {
        get {
            if (_matcherBackgroundLayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BackgroundLayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBackgroundLayer = matcher;
            }

            return _matcherBackgroundLayer;
        }
    }
}
