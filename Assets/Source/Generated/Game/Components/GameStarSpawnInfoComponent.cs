//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity starSpawnInfoEntity { get { return GetGroup(GameMatcher.StarSpawnInfo).GetSingleEntity(); } }
    public StarSpawnInfo starSpawnInfo { get { return starSpawnInfoEntity.starSpawnInfo; } }
    public bool hasStarSpawnInfo { get { return starSpawnInfoEntity != null; } }

    public GameEntity SetStarSpawnInfo(UnityEngine.GameObject newStarPrefab, float newArc, float newDistance, UnityEngine.Vector2 newRange, int newMaxStars, float newGapIncrease, float new_RemainingDistance, UnityEngine.Vector3 new_LastPosition) {
        if (hasStarSpawnInfo) {
            throw new Entitas.EntitasException("Could not set StarSpawnInfo!\n" + this + " already has an entity with StarSpawnInfo!",
                "You should check if the context already has a starSpawnInfoEntity before setting it or use context.ReplaceStarSpawnInfo().");
        }
        var entity = CreateEntity();
        entity.AddStarSpawnInfo(newStarPrefab, newArc, newDistance, newRange, newMaxStars, newGapIncrease, new_RemainingDistance, new_LastPosition);
        return entity;
    }

    public void ReplaceStarSpawnInfo(UnityEngine.GameObject newStarPrefab, float newArc, float newDistance, UnityEngine.Vector2 newRange, int newMaxStars, float newGapIncrease, float new_RemainingDistance, UnityEngine.Vector3 new_LastPosition) {
        var entity = starSpawnInfoEntity;
        if (entity == null) {
            entity = SetStarSpawnInfo(newStarPrefab, newArc, newDistance, newRange, newMaxStars, newGapIncrease, new_RemainingDistance, new_LastPosition);
        } else {
            entity.ReplaceStarSpawnInfo(newStarPrefab, newArc, newDistance, newRange, newMaxStars, newGapIncrease, new_RemainingDistance, new_LastPosition);
        }
    }

    public void RemoveStarSpawnInfo() {
        starSpawnInfoEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public StarSpawnInfo starSpawnInfo { get { return (StarSpawnInfo)GetComponent(GameComponentsLookup.StarSpawnInfo); } }
    public bool hasStarSpawnInfo { get { return HasComponent(GameComponentsLookup.StarSpawnInfo); } }

    public void AddStarSpawnInfo(UnityEngine.GameObject newStarPrefab, float newArc, float newDistance, UnityEngine.Vector2 newRange, int newMaxStars, float newGapIncrease, float new_RemainingDistance, UnityEngine.Vector3 new_LastPosition) {
        var index = GameComponentsLookup.StarSpawnInfo;
        var component = CreateComponent<StarSpawnInfo>(index);
        component.StarPrefab = newStarPrefab;
        component.Arc = newArc;
        component.Distance = newDistance;
        component.Range = newRange;
        component.MaxStars = newMaxStars;
        component.GapIncrease = newGapIncrease;
        component._RemainingDistance = new_RemainingDistance;
        component._LastPosition = new_LastPosition;
        AddComponent(index, component);
    }

    public void ReplaceStarSpawnInfo(UnityEngine.GameObject newStarPrefab, float newArc, float newDistance, UnityEngine.Vector2 newRange, int newMaxStars, float newGapIncrease, float new_RemainingDistance, UnityEngine.Vector3 new_LastPosition) {
        var index = GameComponentsLookup.StarSpawnInfo;
        var component = CreateComponent<StarSpawnInfo>(index);
        component.StarPrefab = newStarPrefab;
        component.Arc = newArc;
        component.Distance = newDistance;
        component.Range = newRange;
        component.MaxStars = newMaxStars;
        component.GapIncrease = newGapIncrease;
        component._RemainingDistance = new_RemainingDistance;
        component._LastPosition = new_LastPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveStarSpawnInfo() {
        RemoveComponent(GameComponentsLookup.StarSpawnInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStarSpawnInfo;

    public static Entitas.IMatcher<GameEntity> StarSpawnInfo {
        get {
            if (_matcherStarSpawnInfo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StarSpawnInfo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStarSpawnInfo = matcher;
            }

            return _matcherStarSpawnInfo;
        }
    }
}
